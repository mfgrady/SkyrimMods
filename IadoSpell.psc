ScriptName IadoSpell extends ActiveMagicEffect
IadoQuest Property myMod Auto
Iado_Config Property issConfig Auto    
Actor Property ActorRef Auto
Perk Property IadoDefense Auto
Perk Property IadoOffense Auto   
Idle Property StanceChange Auto
Idle Property IdleStop Auto

Spell Property StrikeBack Auto
Spell Property Momentum Auto    
    
    
int Normal = -1
int Defensive = 0
int Offensive = 1
int CasterO = 2
int CasterD = 3
int previousState
float sw1HBase = 0.0
float sw2HBase = 0.0
bool gatheringMomentum = false

Event OnPlayerLoadGame()
    int current_crc = FNIS_aa.GetInstallationCRC()
    if ( current_crc == 0 )
        ; Installation Error: no AA generated by FNIS
    elseif ( current_crc != myMod.myModCRC )
        myMod.myModID = FNIS_aa.GetAAModID("iss", "Iado", true)            ; true during test phase only
        myMod.my_1hmidle_base = FNIS_aa.GetGroupBaseValue(myMod.myModID, FNIS_aa._1hmidle(), "Iado", true)
        myMod.my_1hmeqp_base = FNIS_aa.GetGroupBaseValue(myMod.myModID, FNIS_aa._1hmeqp(), "Iado", true)
        myMod.my_1hmmt_base = FNIS_aa.GetGroupBaseValue(myMod.myModID, FNIS_aa._1hmmt(), "Iado", true)
        myMod.my_1hmatk_base = FNIS_aa.GetGroupBaseValue(myMod.myModID, FNIS_aa._1hmatk(), "Iado", true)
        myMod.my_1hmblock_base = FNIS_aa.GetGroupBaseValue(myMod.myModID, FNIS_aa._1hmblock(), "Iado", true)
        myMod.my_1hmatkpow_base =FNIS_aa.GetGroupBaseValue(myMod.myModID, FNIS_aa._1hmatkpow(), "Iado", true)
        myMod.my_2hmidle_base = FNIS_aa.GetGroupBaseValue(myMod.myModID, FNIS_aa._2hmidle(), "Iado", true)
        myMod.my_2hmeqp_base = FNIS_aa.GetGroupBaseValue(myMod.myModID, FNIS_aa._2hmeqp(), "Iado", true)
        myMod.my_2hmmt_base = FNIS_aa.GetGroupBaseValue(myMod.myModID, FNIS_aa._2hmmt(), "Iado", true)
        myMod.my_2hmatk_base = FNIS_aa.GetGroupBaseValue(myMod.myModID, FNIS_aa._2hmatk(), "Iado", true)
        myMod.my_2hmblock_base = FNIS_aa.GetGroupBaseValue(myMod.myModID, FNIS_aa._2hmblock(), "Iado", true)
        myMod.my_2hmatkpow_base =FNIS_aa.GetGroupBaseValue(myMod.myModID, FNIS_aa._2hmatkpow(), "Iado", true)
        myMod.my_sprint_base = FNIS_aa.GetGroupBaseValue(myMod.myModID, FNIS_aa._sprint(), "Iado", true)
		myMod.my_magidle_base = FNIS_aa.GetGroupBaseValue(myMod.myModID, FNIS_aa._magidle(), "Iado", true)
		myMod.my_dw_base = FNIS_aa.GetGroupBaseValue(myMod.myModID, FNIS_aa._dw(), "Iado", true)
        myMod.myModCRC = current_crc
        
    endif
endEvent

Event OnKeyDown(Int KeyCode)
    If KeyCode == issConfig.iStanceKey && GetState() != "Normal"
        If GetState() == "Offensive"
            GotoState("Defensive")
        ElseIf GetState() == "Defensive"
            GotoState("Offensive")
        endIf
    endIf
endEvent

Event OnEffectStart(Actor akTarget, Actor akCaster)
	
    previousState = Normal
    ActorRef = akTarget
    RegisterforKey(issConfig.iStanceKey)
    ;sw1HBase = NiOverride.GetBodyMorph(ActorRef, "RMWSword", "XPMSE")
    ;sw2HBase = NiOverride.GetBodyMorph(ActorRef, "RMWTwohandedSword", "XPMSE")
    ;XPMSELib.WriteXPMSEData(ActorRef, "RMWSword", 1, 1.0)
    ;XPMSELib.WriteXPMSEData(ActorRef, "RMWTwohandedSword", 1, 3.0)
    GotoState("Normal")
endEvent

Event OnEffectFinish(Actor akTarget, Actor akCaster)
    ;If sw1HBase == 0.0
        ;XPMSELib.RemoveXPMSEData(ActorRef, "RMWSword", 1)
    ;Else
        ;XPMSELib.WriteXPMSEData(ActorRef, "RMWSword", 1, sw1HBase)
    ;endIf

    ;If sw2HBase == 0.0
    ;    XPMSELib.RemoveXPMSEData(ActorRef, "RMWTwohandedSword", 1)    
    ;Else
    ;    XPMSELib.WriteXPMSEData(ActorRef, "RMWTwohandedSword", 1, sw2HBase)
    ;endIf    
    RemoveStance()
endEvent

Event OnObjectUnequipped(Form akBaseObject, ObjectReference akReference)
    Weapon equippedItem = ActorRef.GetEquippedObject(1) As Weapon
    If equippedItem != none
        If !(equippedItem.IsSword() || equippedItem.IsGreatsword() || equippedItem.IsBow() || equippedItem.IsStaff())
            GotoState("Normal")
        endIf
    endIf
endEvent

Function ChooseStance()
  If (ActorRef.GetEquippedWeapon(true) == none && ActorRef.GetEquippedWeapon(false) != none)
      If (previousState == Defensive || previousState == Normal)
        GotoState("Defensive")
    ElseIf previousState == Offensive
        GotoState("Offensive")
    endIf
endIf
endFunction

Function RemoveStance()

	If previousState != Normal	
		
		FNIS_aa.SetAnimGroup(ActorRef, "_1hmidle", 0,0, "Iado", true)
		;FNIS_aa.SetAnimGroup(ActorRef, "_1hmeqp", 0,0, "Iado", true)
		FNIS_aa.SetAnimGroup(ActorRef, "_1hmmt", 0,0, "Iado", true)
		FNIS_aa.SetAnimGroup(ActorRef, "_1hmatk", 0,0, "Iado", true)
		FNIS_aa.SetAnimGroup(ActorRef, "_1hmatkpow", 0,0, "Iado", true)
		FNIS_aa.SetAnimGroup(ActorRef, "_1hmblock", 0,0, "Iado", true)
		FNIS_aa.SetAnimGroup(ActorRef, "_2hmidle", 0,0, "Iado", true)
		;FNIS_aa.SetAnimGroup(ActorRef, "_2hmeqp", 0,0, "Iado", true)
		FNIS_aa.SetAnimGroup(ActorRef, "_2hmmt", 0,0, "Iado", true)
		FNIS_aa.SetAnimGroup(ActorRef, "_2hmatk", 0,0, "Iado", true)
		FNIS_aa.SetAnimGroup(ActorRef, "_2hmatkpow", 0,0, "Iado", true)
		FNIS_aa.SetAnimGroup(ActorRef, "_2hmblock", 0,0, "Iado", true)		
		FNIS_aa.SetAnimGroup(ActorRef, "_dw", 0,0, "Iado", true)
		
		If Game.GetModByName("FNIS_PCEA2.esp") != 255
			SendModEvent("PCEA2Task", "refresh")
		endIf
	endIf
endFunction
        


State Normal
    Event OnBeginState()
        If previousState != Normal
            RemoveStance()
            previousState = Normal
        endIf
    EndEvent
   
   Event OnObjectEquipped(Form akBaseObject, ObjectReference akReference)
       Weapon equippedItem = ActorRef.GetEquippedObject(1) As Weapon
       If equippedItem != none
            If (equippedItem.IsSword() || equippedItem.IsGreatsword())
                    ChooseStance()
            endIf
        endIf
    endEvent 
endState

State Offensive
    Event OnBeginState()
	If ActorRef.GetEquippedItemType(0) == 9
        FNIS_aa.SetAnimGroup(ActorRef, "_1hmidle", myMod.my_1hmidle_base, CasterO, "Iado", true)
		FNIS_aa.SetAnimGroup(ActorRef, "_1hmmt", myMod.my_1hmmt_base, CasterO, "Iado", true)
	Else
		FNIS_aa.SetAnimGroup(ActorRef, "_1hmidle", myMod.my_1hmidle_base, Offensive, "Iado", true)
		FNIS_aa.SetAnimGroup(ActorRef, "_1hmmt", myMod.my_1hmmt_base, Offensive, "Iado", true)
	endIf
	
        ;FNIS_aa.SetAnimGroup(ActorRef, "_1hmeqp", myMod.my_1hmeqp_base, Offensive, "Iado", true)
        FNIS_aa.SetAnimGroup(ActorRef, "_1hmatk", myMod.my_1hmatk_base, Offensive, "Iado", true)
        FNIS_aa.SetAnimGroup(ActorRef, "_1hmatkpow", myMod.my_1hmatkpow_base, Offensive, "Iado", true)
        FNIS_aa.SetAnimGroup(ActorRef, "_1hmblock", myMod.my_1hmblock_base, Offensive, "Iado", true)
        FNIS_aa.SetAnimGroup(ActorRef, "_2hmidle", myMod.my_2hmidle_base, Offensive, "Iado", true)
       ; FNIS_aa.SetAnimGroup(ActorRef, "_2hmeqp", myMod.my_2hmeqp_base, Offensive, "Iado", true)
        FNIS_aa.SetAnimGroup(ActorRef, "_2hmmt", myMod.my_2hmmt_base, Offensive, "Iado", true)
        FNIS_aa.SetAnimGroup(ActorRef, "_2hmatk", myMod.my_2hmatk_base, Offensive, "Iado", true)
        FNIS_aa.SetAnimGroup(ActorRef, "_2hmatkpow", myMod.my_2hmatkpow_base, Offensive, "Iado", true)
        FNIS_aa.SetAnimGroup(ActorRef, "_2hmblock", myMod.my_2hmblock_base, Offensive, "Iado", true)				
		FNIS_aa.SetAnimGroup(ActorRef, "_dw", myMod.my_dw_base, Offensive, "Iado", true)
        ActorRef.AddPerk(IadoOffense)
        previousState = Offensive
        RegisterForActorAction(0)
        RegisterForActorAction(7)
    EndEvent
    
    Event OnHit(ObjectReference akAggressor, Form akSource, Projectile akProjectile, bool abPowerAttack, bool abSneakAttack, bool abBashAttack, bool abHitBlocked)
        If ActorRef.HasSpell(Momentum)
            ActorRef.RemoveSpell(Momentum)
        endIf
       gatheringMomentum = false 
        
    endEvent
    
    Event OnActorAction(int actionType, Actor akActor, Form source, int slot)
        If akActor == ActorRef
            If (actionType == 0 || actionType == 7) && ActorRef.GetCombatState() == 1
                gatheringMomentum = True
                RegisterForSingleUpdate(5.0)
            endIf
        endIf
    endEvent
    
    Event OnUpdate()
        If gatheringMomentum
            If !ActorRef.HasSpell(Momentum)
                ActorRef.AddSpell(Momentum,false)
            endIf
        endIf
    endEvent
    
   Event OnEndState()
       ActorRef.RemovePerk(IadoOffense)
       If ActorRef.HasSpell(Momentum)
            ActorRef.RemoveSpell(Momentum)
       endIf
   endEvent
   
endState

State Defensive
    Event OnBeginState()
	
	If ActorRef.GetEquippedItemType(0) == 9
        FNIS_aa.SetAnimGroup(ActorRef, "_1hmidle", myMod.my_1hmidle_base, CasterD, "Iado", true)
		FNIS_aa.SetAnimGroup(ActorRef, "_1hmmt", myMod.my_1hmmt_base, CasterD, "Iado", true)
	Else
		FNIS_aa.SetAnimGroup(ActorRef, "_1hmidle", myMod.my_1hmidle_base, Defensive, "Iado", true)
		FNIS_aa.SetAnimGroup(ActorRef, "_1hmmt", myMod.my_1hmmt_base, Defensive, "Iado", true)
	endIf
	
        ;FNIS_aa.SetAnimGroup(ActorRef, "_1hmeqp", myMod.my_1hmeqp_base, Defensive, "Iado", true)        
        FNIS_aa.SetAnimGroup(ActorRef, "_1hmatk", myMod.my_1hmatk_base, Defensive, "Iado", true)
        FNIS_aa.SetAnimGroup(ActorRef, "_1hmatkpow", myMod.my_1hmatkpow_base, Defensive, "Iado", true)
        FNIS_aa.SetAnimGroup(ActorRef, "_1hmblock", myMod.my_1hmblock_base, Defensive, "Iado", true)
        FNIS_aa.SetAnimGroup(ActorRef, "_2hmidle", myMod.my_2hmidle_base, Defensive, "Iado", true)
        ;FNIS_aa.SetAnimGroup(ActorRef, "_2hmeqp", myMod.my_2hmeqp_base, Defensive, "Iado", true)
        FNIS_aa.SetAnimGroup(ActorRef, "_2hmmt", myMod.my_2hmmt_base, Defensive, "Iado", true)
        FNIS_aa.SetAnimGroup(ActorRef, "_2hmatk", myMod.my_2hmatk_base, Defensive, "Iado", true)
        FNIS_aa.SetAnimGroup(ActorRef, "_2hmatkpow", myMod.my_2hmatkpow_base, Defensive, "Iado", true)
        FNIS_aa.SetAnimGroup(ActorRef, "_2hmblock", myMod.my_2hmblock_base, Defensive, "Iado", true)		
		FNIS_aa.SetAnimGroup(ActorRef, "_dw", myMod.my_dw_base, Defensive, "Iado", true)
        ActorRef.AddPerk(IadoDefense)
        previousState = Defensive
    EndEvent
    
    Event OnHit(ObjectReference akAggressor, Form akSource, Projectile akProjectile, bool abPowerAttack, bool abSneakAttack, bool abBashAttack, bool abHitBlocked)
        If abHitBlocked && !akProjectile
            If !ActorRef.HasSpell(StrikeBack)
                ActorRef.AddSpell(StrikeBack, false)
            endIf
        endIf
    endEvent
   
   Event OnEndState()
       ActorRef.RemovePerk(IadoDefense)
       If !ActorRef.HasSpell(StrikeBack)
           ActorRef.RemoveSpell(StrikeBack)
       endIf
   endEvent 
endState    